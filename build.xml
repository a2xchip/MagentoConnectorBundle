<?xml version="1.0" encoding="UTF-8"?>
<project name="pim" default="build">

    <target name="build-phpspec" depends="prepare,composer,vendors-no-scripts,phpspec,phpspec-junit"/>

    <target name="build-code-quality" depends="prepare,composer,vendors-no-scripts,lint,pdepend,phpmd-ci,phpcs-ci"/>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/app/build/logs"/>

        <delete file="${basedir}/composer.phar" />
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${basedir}/app/build/logs"/>
        <mkdir dir="${basedir}/app/build/pdepend"/>
        <mkdir dir="${basedir}/app/build/logs/phpspec"/>
    </target>

    <target name="composer" description="Install composer.phar">
        <exec executable="bash">
            <arg value="-c"/>
            <arg value="curl -s http://getcomposer.org/installer | php"/>
        </exec>
    </target>

    <target name="vendors-no-scripts" description="Install vendors">
        <exec executable="${basedir}/composer.phar" failonerror="true">
            <arg value="install" />
            <arg value="--no-progress" />
            <arg value="--no-interaction" />
            <arg value="--prefer-dist" />
            <arg value="--optimize-autoloader" />
            <arg value="--no-scripts" />
        </exec>
    </target>

    <target name="phpspec" description="Run specs with PhpSpec Dot formatter">
        <exec executable="./phpspec-fix">
            <arg value="-fdot" />
            <arg value="--no-interaction" />
            <arg value="--ansi" />
        </exec>
    </target>

    <target name="phpspec-junit" description="Run specs with PhpSpec JUnit formatter">
        <exec executable="./phpspec-fix" output="app/build/logs/phpspec/junit.xml">
            <arg value="-fjunit" />
            <arg value="--no-interaction" />
        </exec>
    </target>

    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php" failonerror="true">
            <arg value="-l" />

            <fileset dir="${basedir}/">
                <include name="**/*.php" />
                <exclude name="**/vendor/**" />
                <exclude name="**/bin/**" />
                <modified />
            </fileset>
        </apply>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="./bin/pdepend">
            <arg value="--jdepend-xml=${basedir}/app/build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${basedir}/app/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${basedir}/app/build/pdepend/overview-pyramid.svg" />
            <arg value="--ignore=${basedir}/vendor/,${basedir}/bin/,${basedir}/spec/" />
            <arg path="${basedir}/" />
        </exec>
    </target>

    <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="${basedir}/Resources/jenkins/phpmd_akeneo">
            <arg path="${basedir}/" />
            <arg value="xml" />
            <arg value="--reportfile" />
            <arg value="${basedir}/app/build/logs/pmd.xml" />
            <arg value="--exclude" />
            <arg value="${basedir}/bin/,${basedir}/spec/,${basedir}/vendor/" />
        </exec>
    </target>

    <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="./bin/phpcs" output="/dev/null">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${basedir}/app/build/logs/checkstyle.xml" />
            <arg value="--standard=PSR2" />
            <arg value="--extensions=php" />
            <arg value="--ignore=${basedir}/vendor/,${basedir}/bin/,${basedir}/spec/" />
            <arg path="${basedir}/" />
        </exec>
    </target>
</project>
